---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: database
  name: database
  namespace: formbricks
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: database
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: formbricks
  name: formbricks
  namespace: formbricks
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: formbricks
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: database
  name: database
  namespace: formbricks
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: database
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/stack: "true"
        io.kompose.service: database
    spec:
      containers:
        - env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_HOST
                  name: env
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_URL
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
          image: postgres
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: database-data
      restartPolicy: Always
      volumes:
        - name: database-data
          persistentVolumeClaim:
            claimName: database-data
status: {}

---
apiVersion: v1
data:
  DATABASE_HOST: database:5432
  DATABASE_URL: postgresql://unicorn_user:magical_password@database:5432/calendso
  POSTGRES_DB: calendso
  POSTGRES_PASSWORD: magical_password
  POSTGRES_USER: unicorn_user
  NEXTAUTH_SECRET: jKGKHQYBdyI+CjoWLPIFSLUAYEu+WIOtziSvHX/R3JA=
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: database-env
  name: env
  namespace: formbricks

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: database-data
  name: database-data
  namespace: formbricks
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: stack
  namespace: formbricks
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/stack: "true"
  podSelector:
    matchLabels:
      io.kompose.network/stack: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: formbricks
  name: formbricks
  namespace: formbricks
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: formbricks
  strategy: {}
  template:
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        io.kompose.network/stack: "true"
        io.kompose.service: formbricks
    spec:
      containers:
        - env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_HOST
                  name: env
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_URL
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
          image: mouadeouakil/formbricks
          name: formbricks
          ports:
            - containerPort: 3000
          resources: {}
      restartPolicy: Always
status: {}

